/* Changing default margin, padding and box-sizing of elements. Default box-sizing value is content-box. In content-box the values of border and padding of element is added extra to the element. */
* {
    margin: 0px;
    padding: 0px;
    box-sizing: content-box;
}
/* Changing default background color and font family of body. */
body {
    background-color: #F0F0F0;
    font-family: Arial, Helvetica, sans-serif;
}
/* Giving width and height to container and aligning items inside container according to flexbox. */
.container {
    width: 100vw;
    height: 100vh;
    display: flex;
    /* Setting direction of flexbox. */
    flex-direction: column; 
    /* Aligning items to the center.     */
    align-items: center;    
    /* Distributing even space among elements of container. */
    justify-content: space-around;  
}
/* Also giving width and height to cards container and aligning items according to flexbox. */
.cards {
    width: 600px;
    height: 600px;
    display: flex;
    /* To wrap flex items so that elements do not overflow. */
    flex-wrap: wrap;
    /* Perspective property is used to give a 3D positioned element some perspective. */
    perspective: 1000px;
}
/* Setting the card properties. */
.card {
    position: relative;
    width: 32%;
    height: 25%;
    margin: 1px;
    border: 0.2px solid white;
    /* Transform-Style Property specifies how the nested elements are rendered in 3D space. */
    transform-style: preserve-3d;
    /* Applying the transition to whole card in 0.5 seconds. */
    transition: .5s;
}
/* Flipping the card when the card is clicked */
.card.flip {
    transform: rotateY(180deg);
}
/* Setting the properties of front and back card.  */
.front,.back{
    position: absolute;
    width: 100%;
    height: 100%;

    backface-visibility: hidden;
}
/* When the flip class is removed, the element should fall back to original state i.e. rotate in Y axis by 180 degree. */
.front {
    transform: rotateY(180deg);
}